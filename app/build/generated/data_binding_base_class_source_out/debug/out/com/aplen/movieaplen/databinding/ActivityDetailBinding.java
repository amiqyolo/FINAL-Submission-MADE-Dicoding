// Generated by view binder compiler. Do not edit!
package com.aplen.movieaplen.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aplen.movieaplen.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ChipGroup cgDetailGenre;

  @NonNull
  public final FloatingActionButton fabFavorite;

  @NonNull
  public final HorizontalScrollView hsvCg;

  @NonNull
  public final ImageView imgDetailBackdrop;

  @NonNull
  public final ImageView imgDetailPoster;

  @NonNull
  public final TextView infoDetail;

  @NonNull
  public final TextView infoGenre;

  @NonNull
  public final TextView infoOverview;

  @NonNull
  public final TextView infoRelease;

  @NonNull
  public final MaterialCardView mvcDetailPoster;

  @NonNull
  public final NestedScrollView nested;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvDetailOverview;

  @NonNull
  public final TextView tvDetailRating;

  @NonNull
  public final TextView tvDetailRelease;

  @NonNull
  public final TextView tvDetailTitle;

  private ActivityDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ChipGroup cgDetailGenre, @NonNull FloatingActionButton fabFavorite,
      @NonNull HorizontalScrollView hsvCg, @NonNull ImageView imgDetailBackdrop,
      @NonNull ImageView imgDetailPoster, @NonNull TextView infoDetail, @NonNull TextView infoGenre,
      @NonNull TextView infoOverview, @NonNull TextView infoRelease,
      @NonNull MaterialCardView mvcDetailPoster, @NonNull NestedScrollView nested,
      @NonNull ProgressBar progressBar, @NonNull Toolbar toolbar,
      @NonNull TextView tvDetailOverview, @NonNull TextView tvDetailRating,
      @NonNull TextView tvDetailRelease, @NonNull TextView tvDetailTitle) {
    this.rootView = rootView;
    this.cgDetailGenre = cgDetailGenre;
    this.fabFavorite = fabFavorite;
    this.hsvCg = hsvCg;
    this.imgDetailBackdrop = imgDetailBackdrop;
    this.imgDetailPoster = imgDetailPoster;
    this.infoDetail = infoDetail;
    this.infoGenre = infoGenre;
    this.infoOverview = infoOverview;
    this.infoRelease = infoRelease;
    this.mvcDetailPoster = mvcDetailPoster;
    this.nested = nested;
    this.progressBar = progressBar;
    this.toolbar = toolbar;
    this.tvDetailOverview = tvDetailOverview;
    this.tvDetailRating = tvDetailRating;
    this.tvDetailRelease = tvDetailRelease;
    this.tvDetailTitle = tvDetailTitle;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cg_detail_genre;
      ChipGroup cgDetailGenre = ViewBindings.findChildViewById(rootView, id);
      if (cgDetailGenre == null) {
        break missingId;
      }

      id = R.id.fab_favorite;
      FloatingActionButton fabFavorite = ViewBindings.findChildViewById(rootView, id);
      if (fabFavorite == null) {
        break missingId;
      }

      id = R.id.hsv_cg;
      HorizontalScrollView hsvCg = ViewBindings.findChildViewById(rootView, id);
      if (hsvCg == null) {
        break missingId;
      }

      id = R.id.img_detail_backdrop;
      ImageView imgDetailBackdrop = ViewBindings.findChildViewById(rootView, id);
      if (imgDetailBackdrop == null) {
        break missingId;
      }

      id = R.id.img_detail_poster;
      ImageView imgDetailPoster = ViewBindings.findChildViewById(rootView, id);
      if (imgDetailPoster == null) {
        break missingId;
      }

      id = R.id.info_detail;
      TextView infoDetail = ViewBindings.findChildViewById(rootView, id);
      if (infoDetail == null) {
        break missingId;
      }

      id = R.id.info_genre;
      TextView infoGenre = ViewBindings.findChildViewById(rootView, id);
      if (infoGenre == null) {
        break missingId;
      }

      id = R.id.info_overview;
      TextView infoOverview = ViewBindings.findChildViewById(rootView, id);
      if (infoOverview == null) {
        break missingId;
      }

      id = R.id.info_release;
      TextView infoRelease = ViewBindings.findChildViewById(rootView, id);
      if (infoRelease == null) {
        break missingId;
      }

      id = R.id.mvc_detail_poster;
      MaterialCardView mvcDetailPoster = ViewBindings.findChildViewById(rootView, id);
      if (mvcDetailPoster == null) {
        break missingId;
      }

      id = R.id.nested;
      NestedScrollView nested = ViewBindings.findChildViewById(rootView, id);
      if (nested == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_detail_overview;
      TextView tvDetailOverview = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailOverview == null) {
        break missingId;
      }

      id = R.id.tv_detail_rating;
      TextView tvDetailRating = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailRating == null) {
        break missingId;
      }

      id = R.id.tv_detail_release;
      TextView tvDetailRelease = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailRelease == null) {
        break missingId;
      }

      id = R.id.tv_detail_title;
      TextView tvDetailTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDetailTitle == null) {
        break missingId;
      }

      return new ActivityDetailBinding((CoordinatorLayout) rootView, cgDetailGenre, fabFavorite,
          hsvCg, imgDetailBackdrop, imgDetailPoster, infoDetail, infoGenre, infoOverview,
          infoRelease, mvcDetailPoster, nested, progressBar, toolbar, tvDetailOverview,
          tvDetailRating, tvDetailRelease, tvDetailTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
