// Generated by Dagger (https://dagger.dev).
package com.aplen.core.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.reactivex.disposables.CompositeDisposable;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CompositeModule_ProvideCompositeDisposableFactory implements Factory<CompositeDisposable> {
  private final CompositeModule module;

  public CompositeModule_ProvideCompositeDisposableFactory(CompositeModule module) {
    this.module = module;
  }

  @Override
  public CompositeDisposable get() {
    return provideCompositeDisposable(module);
  }

  public static CompositeModule_ProvideCompositeDisposableFactory create(CompositeModule module) {
    return new CompositeModule_ProvideCompositeDisposableFactory(module);
  }

  public static CompositeDisposable provideCompositeDisposable(CompositeModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideCompositeDisposable());
  }
}
