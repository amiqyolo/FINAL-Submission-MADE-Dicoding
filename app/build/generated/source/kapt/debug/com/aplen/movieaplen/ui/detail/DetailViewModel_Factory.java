// Generated by Dagger (https://dagger.dev).
package com.aplen.movieaplen.ui.detail;

import com.aplen.core.domain.usecase.MovieUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DetailViewModel_Factory implements Factory<DetailViewModel> {
  private final Provider<MovieUseCase> useCaseProvider;

  public DetailViewModel_Factory(Provider<MovieUseCase> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public DetailViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static DetailViewModel_Factory create(Provider<MovieUseCase> useCaseProvider) {
    return new DetailViewModel_Factory(useCaseProvider);
  }

  public static DetailViewModel newInstance(MovieUseCase useCase) {
    return new DetailViewModel(useCase);
  }
}
